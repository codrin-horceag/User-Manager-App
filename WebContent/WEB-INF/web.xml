<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://xmlns.jcp.org/xml/ns/javaee"
	xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd"
	id="WebApp_ID" version="4.0">
	<display-name>usermanager</display-name>
	
	<servlet>
	  	<servlet-name>Jersey RESTful Application</servlet-name>
	  	<servlet-class>org.glassfish.jersey.servlet.ServletContainer</servlet-class>
	  		<init-param>
	  		 	<param-name>jersey.config.server.provider.packages</param-name>
	  		 	<param-value>com.usermanager.services</param-value>
	  		</init-param>
    </servlet>
	  <servlet-mapping>
	  	<servlet-name>Jersey RESTful Application</servlet-name>
	  	<url-pattern>/rest/*</url-pattern>
	  </servlet-mapping>
	  
	<!-- Set the Welcome Page of your application -->
	<welcome-file-list>
		<welcome-file>D:\Facultate\master anul 1\Proiect Java\UserManagerAPI-WebApplication-main\WebContent\login.html</welcome-file>
	</welcome-file-list>
	<servlet>
		<servlet-name>FileUploadServlet</servlet-name>
		<servlet-class>com.usermanager.servlets.FileUploadServlet</servlet-class>	
	</servlet>
	<servlet-mapping>
		<servlet-name>FileUploadServlet</servlet-name>
		<url-pattern>/FileUploadServlet</url-pattern>
	</servlet-mapping>
	<servlet>
		<servlet-name>EmailServlet</servlet-name>
		<servlet-class>com.usermanager.servlets.EmailServlet</servlet-class>	
	</servlet>
	<servlet-mapping>
		<servlet-name>EmailServlet</servlet-name>
		<url-pattern>/EmailServlet</url-pattern>
	</servlet-mapping>
		
	
	
	<!-- Set context initial parameters -->
	<context-param>
		<param-name>UPLOAD_DIR</param-name>
		<param-value>uploads</param-value>
	</context-param>
	<context-param>
		<param-name>DBUSER</param-name>
		<param-value>postgres</param-value>
	</context-param>
	<context-param>
		<param-name>DBPWD</param-name>
		<param-value>postgres</param-value>
	</context-param>
	<context-param>
		<param-name>DBURL</param-name>
		<param-value>jdbc:mysql://localhost/javaproject</param-value>
	</context-param>
	<!-- Define Listener Classes -->
	<listener>
		<listener-class>com.usermanager.listeners.AppContextAttributeListener</listener-class>
	</listener>
	<listener>
		<listener-class>com.usermanager.listeners.AppContextListener</listener-class>
	</listener>
	<listener>
		<listener-class>com.usermanager.listeners.ServletRequestListenerClass</listener-class>
	</listener>
	<listener>
		<listener-class>com.usermanager.listeners.SessionListener</listener-class>
	</listener>

	<!-- Set the configuration in case of an user error or exception -->
	<error-page>
		<!-- Declare an exception you want to catch or use java.lang.Throwable 
			if you want to catch all exceptions -->
		<exception-type>java.lang.Throwable</exception-type>
		<!-- Set the path to the class that will be passed the exception to handle 
			it -->
		<location>/AppExceptionHandler</location>
	</error-page>
	<error-page>
		<!-- Set the HTTP Error Code you want to be passed to the class in case 
			of an error code -->
		<error-code>404</error-code>
		<location>/AppExceptionHandler</location>
	</error-page>
	
	<!-- WebFilters can be declared by web.xml or using annotations
	 But if you do both it Filter Class will be initialized first by annotations without 
	 the initial parameters inside web.xml file-->
	
	<!-- Declare a Filter Class -->
	<filter>
		<!--Set Filter Class name -->
		<filter-name>LogFilter</filter-name>
		<!--Set Filter Class Path -->
		<filter-class>com.usermanager.filters.LogFilter</filter-class>
		<!-- Configure Initial parameter name and value that will be set and passed 
			to the Filter Class -->
		<init-param>
			<param-name>password-param</param-name>
			<param-value>Tomcat</param-value>
		</init-param>
	</filter>
	<filter>
		<filter-name>RequestLogingFilter</filter-name>
		<filter-class>com.usermanager.filters.requestLoggingFilter</filter-class>
	</filter>  
	<filter>
		<filter-name>AuthenticationFilter</filter-name>
		<filter-class>com.usermanager.filters.AuthenticationFilter</filter-class>
	</filter>
	<filter>
		<filter-name>SiteCounterFilter</filter-name>
		<filter-class>com.usermanager.filters.SiteCounterFilter</filter-class>
	</filter>
	<!-- Set Filter Mapping -->
	<filter-mapping>
		<!-- Set Filter Name -->
		<filter-name>RequestLogingFilter</filter-name>
		<!-- Set the specific URL you want to be Filtered by or set "/*" if you 
			want all url's of your application to be filtered -->
		<url-pattern>/*</url-pattern>
	</filter-mapping>
<!-- Set Filter Mapping -->
	<filter-mapping>
		<!-- Set Filter Name -->
		<filter-name>AuthenticationFilter</filter-name>
		<!-- Set the URL you want to be Filtered by or set "/*" if you want all 
			url's of your application to be filtered -->
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>LogFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	
	<filter-mapping>
		<filter-name>SiteCounterFilter</filter-name>
		<!--You can set the counter for all site pages or you can target count for a specific page URL -->
		<url-pattern>/*</url-pattern>
	</filter-mapping>
</web-app> 
